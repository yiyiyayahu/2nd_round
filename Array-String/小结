对于integer overflow时候边界的处理

比如判断result*10+digit是不是越界 （之后还可能if(isNeg) return -result;但是这个处理是ok的）
if(result>Integer.MAX_VALUE/10 || (result==Integer.MAX_VALUE/10 &&digit>=8)) 

===============================
把一个string排序
  char[] arr = s.toCharArray();
  Arrays.sort(arr);
  String key = String.valueOf(arr);
  
java自带的对一个list排序
Collections.sort(list)
===============================
char c to Character
Character ch = new Character(c);





===============================
String to int:
String s = "123";
int num = Integer.parseInt(s);

int to String:
String.valueOf(num);

===============================
sb.deleteCharAt(sb.length()-1)


===============================
很多时候java自带的比较函数并不好
比如1<<n就比Math.pow(2,n)效率高很多
包括Math.min, Math.max其实效率都会相对低一点



===============================
int[] to Arraylist<Integer>

1. 
Integer[] arr = new Integer[len];
Arrays.asList(arr);

2. 
int[] arr = new int[len];
Arraylist<Integer> list = new ArrayList<>();
for(int i = 0; i < len; i++) {
    list.add(arr[i]);
}
