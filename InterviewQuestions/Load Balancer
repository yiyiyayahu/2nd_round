第四轮：一个白人小年轻，也是一脸笑嘻嘻的，但仍然掩饰不住问题的刁钻。让我设计 load balancer
这题比较开放，我讲了几种大概的思路，但他刁钻的提出让我从多线程的角度去分析，
如果一下来了太多的 load request 怎么办，如果你与 server 之间的沟通有延迟怎么办，怎么设置安全锁来保证你得到的当前各个 server 的状态是实时的。
我去，我记得当时我也就看了关于 load balancer 的几种处理思路，没有考虑这么多的细节，答得不是很好。
从来刷题也没刷到过考多线程这么深的问题，不知多线程问题在Google是不是很多被问到，还是我太背啊。

这个要好好准备一下啊。。。看来真正面试还真不是单纯的刷题那么简单。。。哭了


load balancer一个简单的算法就是round robin，但是有很多drawback，就是load分配不均，很可能有的server就overload，有的server没事儿干
然后呢，可以通过和server通信看这个server有多么busy来决定分配给谁

关于thread都有点忘差不多了，赶紧复习一下
https://www.javacodegeeks.com/2014/11/multithreading-concurrency-interview-questions-answers.html


For what purposes is the keyword synchronized used?
When you have to implement exclusive access to a resource, like some static value or some file reference, 
the code that works with the exclusive resource can be embraced with a synchronized block:

synchronized (SynchronizedCounter.class) {
    counter++;
}
